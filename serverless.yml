service: ms-template
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 30
  memorySize: 512
  stage: ${opt:stage, "${env:stage, 'dev'}"}
  region: ${opt:region, "${env:region, 'us-east-1'}"}
  apiGateway:
    restApiId: ${ssm:api-gateway-api-id}
    restApiRootResourceId: ${ssm:api-gateway-root-resource-id}

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    includeLayers: true
    number: 3
  funcDir: 'src/framework/functions'
  basePath: 'backoffice/v1'
  gateway-authorizer:
    type: token
    authorizerId: ${ssm:api-gateway-authorizer-id}
  serverless-offline:
    httpPort: 4005
    lambdaPort: 3005
    stage: local
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packages: npm
    packagerOptions:
      noFrozenLockfile: true

package:
  patterns:
    - node_modules/**

functions:
  backofficeProxy:
    handler: ${self:custom.funcDir}/backofficeProxy.handler
    events:
      - http:
          path: ${self:custom.basePath}/template/{proxy+}
          method: any
          authorizer: ${self:custom.gateway-authorizer}
          cors:
            origin: '*'
            headers: '*'
